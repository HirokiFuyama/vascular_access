[PATH]
# raw data
data_directory = /Users/hiroki/github/vascular_access/data/test/*.wav

# save spectrogram
train_images = /Users/hiroki/github/vascular_access/figure/spectrogram_png/train/
test_normal_images = /Users/hiroki/github/vascular_access/figure/spectrogram_png/test/
test_noise_images = /Users/hiroki/github/vascular_access/figure/spectrogram_png/test_noise/

# model
d_save = /Users/hiroki/github/vascular_access/model/D_400ep_100dim.pt
g_save = /Users/hiroki/github/vascular_access/model/G_400ep_100dim.pt


[SAMPLING_FREQUENCY]
fs = 44100


#-----------------------------------------------------------------------------------------------------------------------
#                                           convert_spectrogram.py
#-----------------------------------------------------------------------------------------------------------------------
[PRE_PROCESSING]
window_length = 10
slide_length = 1
cut_length = 15
# unit: window, slide, cut == second


[STFT]
window_length = 1
slide_length = 0.08
frequency_low = 30
frequency_high = 1000
bins = 8
# unit: window, slide == second, low, high


[IMAGE]
shape = 128


#-----------------------------------------------------------------------------------------------------------------------
#                                           convert_spectrogram.py
#-----------------------------------------------------------------------------------------------------------------------
[NOISE]
amplitude_h = 30
amplitude_l = 10


[BANDPASS]
high_h = 900
high_l = 500

low_h = 140
low_l = 120

side_w = 150
side_t = 50

gstop = 30
gpass = 1

#-----------------------------------------------------------------------------------------------------------------------
#                                           train_gan.py
#-----------------------------------------------------------------------------------------------------------------------

[DATA]
mean =  (0.5,)
std = (0.5,)
batch_size = 128
shuffle = False


[GENERATOR]
z_dim = 50
image_size = 128


[DISCRIMINATOR]
image_size = 128


[TRAIN]
g_learning_rate = 0.0003
g_beta_1 = 0.0
g_beta_2 = 0.9

d_learning_rate = 0.0005
d_beta_1 = 0.0
d_beta_2 = 0.9

mini_batch = 128
num_epoch = 400


#-----------------------------------------------------------------------------------------------------------------------
#                                        ano_gan.py
#-----------------------------------------------------------------------------------------------------------------------
[ANOMALY]
lambda = 0.1


[DATALOADER]
mean =  (0.5,)
std = (0.5,)
# For calculate anomaly score of noise data
batch_noise = 5
# For calculate anomaly score of normal data
batch_normal = 100
shuffle = False


[Z]
z_dim = 100
z_lr = 1e-3
epoch = 5001